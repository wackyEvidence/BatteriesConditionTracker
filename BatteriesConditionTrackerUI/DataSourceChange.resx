<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>